---
page-layout: full
from: markdown+emoji
---

# Results by country

```{r}
# Import packages and working dataset
library(tidyverse)
library(haven)
library(plotly)
library(gt)

df_es <- readRDS("./data/ES2_NameSurvey_2025-01-24.RDS")

# Get weighted mean using the survey weight variable
get_mean <- function(var_es, wgt_es){
    weighted.mean({{var_es}}, w = {{wgt_es}}, na.rm = TRUE)
}

```

# Results by country

::: {.callout-important}
**Don't Know**: All the rates in the tables below include 'Don't Know' in the denominator. 

**Ladder**: This column shows the mean value for the question on status. The original scale was inverted and rescaled so here higher values denote higher positions in the ladder (from 0 to 1). 
:::


```{r}
# Function to get congruence rates for specific variables and countries
get_rank <- function(country, ...){

    selected_vars <- c(...)

    tb_country <- 
      df_es |>
        group_by(country_survey, country_name, Name) |>
        summarise(across(all_of(selected_vars), ~get_mean(., Weging)), .groups = 'drop') |>
        filter(country_survey == country) |>
        arrange(country_name)

    openxlsx::write.xlsx(tb_country, file = paste0("./data/rankings/", country, ".xlsx"))

    gt(tb_country) |> 
      fmt_percent(decimals = 0) |>
      sub_missing() |>
      cols_label_with(fn =  ~str_remove(., "cong_|_adj")) |>
      opt_interactive(use_filters = TRUE, use_page_size_select = TRUE)
  }

country_variables <- c("cong_sex", "skin_adj", "cong_country", "cong_region", "ladder_adj", "religiosity")
```


## Belgium

```{r}
get_rank("Belgium", country_variables)
```


## Czech Republic


```{r}
get_rank("Czech Republic", country_variables)

```


## Germany


```{r}
get_rank("Germany", country_variables)
```


## Hungary


```{r}
get_rank("Hungary", country_variables)

```


## Ireland

```{r}
get_rank("Ireland", country_variables)

```


## Netherlands

```{r}
get_rank("The Netherlands", country_variables)

```


## Spain


```{r}
get_rank("Spain", country_variables)
```


## Switzerland


```{r}
get_rank("Switzerland", country_variables)
```


## UK

```{r}
get_rank("UK", country_variables)
```

